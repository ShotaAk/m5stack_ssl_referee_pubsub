/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_SSL_GC_GAME_EVENT_PB_H_INCLUDED
#define PB_SSL_GC_GAME_EVENT_PB_H_INCLUDED
#include "pb.h"
#include "ssl_gc_common.pb.h"
#include "ssl_gc_geometry.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _GameEvent_Type {
    GameEvent_Type_UNKNOWN_GAME_EVENT_TYPE = 0,
    GameEvent_Type_BALL_LEFT_FIELD_TOUCH_LINE = 6, /* triggered by autoRef */
    GameEvent_Type_BALL_LEFT_FIELD_GOAL_LINE = 7, /* triggered by autoRef */
    GameEvent_Type_AIMLESS_KICK = 11, /* triggered by autoRef */
    GameEvent_Type_ATTACKER_TOO_CLOSE_TO_DEFENSE_AREA = 19, /* triggered by autoRef */
    GameEvent_Type_DEFENDER_IN_DEFENSE_AREA = 31, /* triggered by autoRef */
    GameEvent_Type_BOUNDARY_CROSSING = 41, /* triggered by autoRef */
    GameEvent_Type_KEEPER_HELD_BALL = 13, /* triggered by GC */
    GameEvent_Type_BOT_DRIBBLED_BALL_TOO_FAR = 17, /* triggered by autoRef */
    GameEvent_Type_BOT_PUSHED_BOT = 24, /* triggered by human ref */
    GameEvent_Type_BOT_HELD_BALL_DELIBERATELY = 26, /* triggered by human ref */
    GameEvent_Type_BOT_TIPPED_OVER = 27, /* triggered by human ref */
    GameEvent_Type_ATTACKER_TOUCHED_BALL_IN_DEFENSE_AREA = 15, /* triggered by autoRef */
    GameEvent_Type_BOT_KICKED_BALL_TOO_FAST = 18, /* triggered by autoRef */
    GameEvent_Type_BOT_CRASH_UNIQUE = 22, /* triggered by autoRef */
    GameEvent_Type_BOT_CRASH_DRAWN = 21, /* triggered by autoRef */
    GameEvent_Type_DEFENDER_TOO_CLOSE_TO_KICK_POINT = 29, /* triggered by autoRef */
    GameEvent_Type_BOT_TOO_FAST_IN_STOP = 28, /* triggered by autoRef */
    GameEvent_Type_BOT_INTERFERED_PLACEMENT = 20, /* triggered by autoRef */
    GameEvent_Type_POSSIBLE_GOAL = 39, /* triggered by autoRef */
    GameEvent_Type_GOAL = 8, /* triggered by GC */
    GameEvent_Type_INVALID_GOAL = 42, /* triggered by GC */
    GameEvent_Type_ATTACKER_DOUBLE_TOUCHED_BALL = 14, /* triggered by autoRef */
    GameEvent_Type_PLACEMENT_SUCCEEDED = 5, /* triggered by autoRef */
    GameEvent_Type_PENALTY_KICK_FAILED = 43, /* triggered by GC and autoRef */
    GameEvent_Type_NO_PROGRESS_IN_GAME = 2, /* triggered by GC */
    GameEvent_Type_PLACEMENT_FAILED = 3, /* triggered by GC */
    GameEvent_Type_MULTIPLE_CARDS = 32, /* triggered by GC */
    GameEvent_Type_MULTIPLE_FOULS = 34, /* triggered by GC */
    GameEvent_Type_BOT_SUBSTITUTION = 37, /* triggered by GC */
    GameEvent_Type_TOO_MANY_ROBOTS = 38, /* triggered by GC */
    GameEvent_Type_CHALLENGE_FLAG = 44, /* triggered by GC */
    GameEvent_Type_EMERGENCY_STOP = 45, /* triggered by GC */
    GameEvent_Type_UNSPORTING_BEHAVIOR_MINOR = 35, /* triggered by human ref */
    GameEvent_Type_UNSPORTING_BEHAVIOR_MAJOR = 36, /* triggered by human ref */
    GameEvent_Type_PREPARED = 1,
    GameEvent_Type_INDIRECT_GOAL = 9,
    GameEvent_Type_CHIPPED_GOAL = 10,
    GameEvent_Type_KICK_TIMEOUT = 12,
    GameEvent_Type_ATTACKER_TOUCHED_OPPONENT_IN_DEFENSE_AREA = 16,
    GameEvent_Type_ATTACKER_TOUCHED_OPPONENT_IN_DEFENSE_AREA_SKIPPED = 40,
    GameEvent_Type_BOT_CRASH_UNIQUE_SKIPPED = 23,
    GameEvent_Type_BOT_PUSHED_BOT_SKIPPED = 25,
    GameEvent_Type_DEFENDER_IN_DEFENSE_AREA_PARTIALLY = 30,
    GameEvent_Type_MULTIPLE_PLACEMENT_FAILURES = 33
} GameEvent_Type;

/* Struct definitions */
/* the ball left the field normally */
typedef struct _GameEvent_BallLeftField {
    /* the team that last touched the ball */
    Team by_team;
    /* the bot that last touched the ball */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location where the ball left the field [m] */
    bool has_location;
    Vector2 location;
} GameEvent_BallLeftField;

/* the ball left the field via goal line and a team committed an aimless kick */
typedef struct _GameEvent_AimlessKick {
    /* the team that last touched the ball */
    Team by_team;
    /* the bot that last touched the ball */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location where the ball left the field [m] */
    bool has_location;
    Vector2 location;
    /* the location where the ball was last touched [m] */
    bool has_kick_location;
    Vector2 kick_location;
} GameEvent_AimlessKick;

/* a team shot a goal */
typedef struct _GameEvent_Goal {
    /* the team that scored the goal */
    Team by_team;
    /* the bot that shot the goal */
    bool has_kicking_bot;
    uint32_t kicking_bot;
    /* the location where the ball entered the goal [m] */
    bool has_location;
    Vector2 location;
    /* the location where the ball was kicked (for deciding if this was a valid goal) [m] */
    bool has_kick_location;
    Vector2 kick_location;
    /* the maximum height the ball reached during the goal kick (for deciding if this was a valid goal) [m] */
    bool has_max_ball_height;
    float max_ball_height;
    /* the team that shot the goal (different from by_team for own goals) */
    bool has_kicking_team;
    Team kicking_team;
    /* number of robots of scoring team when the ball entered the goal (for deciding if this was a valid goal) */
    bool has_num_robots_by_team;
    uint32_t num_robots_by_team;
    /* The UNIX timestamp [μs] when the scoring team last touched the ball */
    bool has_last_touch_by_team;
    uint64_t last_touch_by_team;
    /* An additional message with e.g. a reason for invalid goals */
    pb_callback_t message;
} GameEvent_Goal;

/* the ball entered the goal directly during an indirect free kick */
typedef struct _GameEvent_IndirectGoal {
    /* the team that tried to shoot the goal */
    Team by_team;
    /* the bot that kicked the ball - at least the team must be set */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location where the ball entered the goal [m] */
    bool has_location;
    Vector2 location;
    /* the location where the ball was kicked [m] */
    bool has_kick_location;
    Vector2 kick_location;
} GameEvent_IndirectGoal;

/* the ball entered the goal, but was initially chipped */
typedef struct _GameEvent_ChippedGoal {
    /* the team that tried to shoot the goal */
    Team by_team;
    /* the bot that kicked the ball */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location where the ball entered the goal [m] */
    bool has_location;
    Vector2 location;
    /* the location where the ball was kicked [m] */
    bool has_kick_location;
    Vector2 kick_location;
    /* the maximum height [m] of the ball, before it entered the goal and since the last kick [m] */
    bool has_max_ball_height;
    float max_ball_height;
} GameEvent_ChippedGoal;

/* a bot moved too fast while the game was stopped */
typedef struct _GameEvent_BotTooFastInStop {
    /* the team that found guilty */
    Team by_team;
    /* the bot that was too fast */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the bot [m] */
    bool has_location;
    Vector2 location;
    /* the bot speed [m/s] */
    bool has_speed;
    float speed;
} GameEvent_BotTooFastInStop;

/* a bot of the defending team got too close to the kick point during a free kick */
typedef struct _GameEvent_DefenderTooCloseToKickPoint {
    /* the team that was found guilty */
    Team by_team;
    /* the bot that violates the distance to the kick point */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the bot [m] */
    bool has_location;
    Vector2 location;
    /* the distance [m] from bot to the kick point (including the minimum radius) */
    bool has_distance;
    float distance;
} GameEvent_DefenderTooCloseToKickPoint;

/* two robots crashed into each other with similar speeds */
typedef struct _GameEvent_BotCrashDrawn {
    /* the bot of the yellow team */
    bool has_bot_yellow;
    uint32_t bot_yellow;
    /* the bot of the blue team */
    bool has_bot_blue;
    uint32_t bot_blue;
    /* the location of the crash (center between both bots) [m] */
    bool has_location;
    Vector2 location;
    /* the calculated crash speed [m/s] of the two bots */
    bool has_crash_speed;
    float crash_speed;
    /* the difference [m/s] of the velocity of the two bots */
    bool has_speed_diff;
    float speed_diff;
    /* the angle [rad] in the range [0, π] of the bot velocity vectors
 an angle of 0 rad (  0°) means, the bots barely touched each other
 an angle of π rad (180°) means, the bots crashed frontal into each other */
    bool has_crash_angle;
    float crash_angle;
} GameEvent_BotCrashDrawn;

/* two robots crashed into each other and one team was found guilty to due significant speed difference */
typedef struct _GameEvent_BotCrashUnique {
    /* the team that caused the crash */
    Team by_team;
    /* the bot that caused the crash */
    bool has_violator;
    uint32_t violator;
    /* the bot of the opposite team that was involved in the crash */
    bool has_victim;
    uint32_t victim;
    /* the location of the crash (center between both bots) [m] */
    bool has_location;
    Vector2 location;
    /* the calculated crash speed vector [m/s] of the two bots */
    bool has_crash_speed;
    float crash_speed;
    /* the difference [m/s] of the velocity of the two bots */
    bool has_speed_diff;
    float speed_diff;
    /* the angle [rad] in the range [0, π] of the bot velocity vectors
 an angle of 0 rad (  0°) means, the bots barely touched each other
 an angle of π rad (180°) means, the bots crashed frontal into each other */
    bool has_crash_angle;
    float crash_angle;
} GameEvent_BotCrashUnique;

/* a bot pushed another bot over a significant distance */
typedef struct _GameEvent_BotPushedBot {
    /* the team that pushed the other team */
    Team by_team;
    /* the bot that pushed the other bot */
    bool has_violator;
    uint32_t violator;
    /* the bot of the opposite team that was pushed */
    bool has_victim;
    uint32_t victim;
    /* the location of the push (center between both bots) [m] */
    bool has_location;
    Vector2 location;
    /* the pushed distance [m] */
    bool has_pushed_distance;
    float pushed_distance;
} GameEvent_BotPushedBot;

/* a bot tipped over */
typedef struct _GameEvent_BotTippedOver {
    /* the team that found guilty */
    Team by_team;
    /* the bot that tipped over */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the bot [m] */
    bool has_location;
    Vector2 location;
    /* the location of the ball at the moment when this foul occurred [m] */
    bool has_ball_location;
    Vector2 ball_location;
} GameEvent_BotTippedOver;

/* a defender other than the keeper was fully located inside its own defense and touched the ball */
typedef struct _GameEvent_DefenderInDefenseArea {
    /* the team that found guilty */
    Team by_team;
    /* the bot that is inside the penalty area */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the bot [m] */
    bool has_location;
    Vector2 location;
    /* the distance [m] from bot case to the nearest point outside the defense area */
    bool has_distance;
    float distance;
} GameEvent_DefenderInDefenseArea;

/* a defender other than the keeper was partially located inside its own defense area and touched the ball */
typedef struct _GameEvent_DefenderInDefenseAreaPartially {
    /* the team that found guilty */
    Team by_team;
    /* the bot that is partially inside the penalty area */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the bot */
    bool has_location;
    Vector2 location;
    /* the distance [m] that the bot is inside the penalty area */
    bool has_distance;
    float distance;
    /* the location of the ball at the moment when this foul occurred [m] */
    bool has_ball_location;
    Vector2 ball_location;
} GameEvent_DefenderInDefenseAreaPartially;

/* an attacker touched the ball inside the opponent defense area */
typedef struct _GameEvent_AttackerTouchedBallInDefenseArea {
    /* the team that found guilty */
    Team by_team;
    /* the bot that is inside the penalty area */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the bot [m] */
    bool has_location;
    Vector2 location;
    /* the distance [m] that the bot is inside the penalty area */
    bool has_distance;
    float distance;
} GameEvent_AttackerTouchedBallInDefenseArea;

/* a bot kicked the ball too fast */
typedef struct _GameEvent_BotKickedBallTooFast {
    /* the team that found guilty */
    Team by_team;
    /* the bot that kicked too fast */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the ball at the time of the highest speed [m] */
    bool has_location;
    Vector2 location;
    /* the absolute initial ball speed (kick speed) [m/s] */
    bool has_initial_ball_speed;
    float initial_ball_speed;
    /* was the ball chipped? */
    bool has_chipped;
    bool chipped;
} GameEvent_BotKickedBallTooFast;

/* a bot dribbled to ball too far */
typedef struct _GameEvent_BotDribbledBallTooFar {
    /* the team that found guilty */
    Team by_team;
    /* the bot that dribbled too far */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location where the dribbling started [m] */
    bool has_start;
    Vector2 start;
    /* the location where the maximum dribbling distance was reached [m] */
    bool has_end;
    Vector2 end;
} GameEvent_BotDribbledBallTooFar;

/* an attacker touched the opponent robot inside defense area */
typedef struct _GameEvent_AttackerTouchedOpponentInDefenseArea {
    /* the team that found guilty */
    Team by_team;
    /* the bot that touched the opponent robot */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the contact point between both bots [m] */
    bool has_location;
    Vector2 location;
    /* the bot of the opposite team that was touched */
    bool has_victim;
    uint32_t victim;
} GameEvent_AttackerTouchedOpponentInDefenseArea;

/* an attacker touched the ball multiple times when it was not allowed to */
typedef struct _GameEvent_AttackerDoubleTouchedBall {
    /* the team that found guilty */
    Team by_team;
    /* the bot that touched the ball twice */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the ball when it was first touched [m] */
    bool has_location;
    Vector2 location;
} GameEvent_AttackerDoubleTouchedBall;

/* an attacker was located too near to the opponent defense area during stop or free kick */
typedef struct _GameEvent_AttackerTooCloseToDefenseArea {
    /* the team that found guilty */
    Team by_team;
    /* the bot that is too close to the defense area */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the bot [m] */
    bool has_location;
    Vector2 location;
    /* the distance [m] of the bot to the penalty area */
    bool has_distance;
    float distance;
    /* the location of the ball at the moment when this foul occurred [m] */
    bool has_ball_location;
    Vector2 ball_location;
} GameEvent_AttackerTooCloseToDefenseArea;

/* a bot held the ball for too long */
typedef struct _GameEvent_BotHeldBallDeliberately {
    /* the team that found guilty */
    Team by_team;
    /* the bot that holds the ball */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the ball [m] */
    bool has_location;
    Vector2 location;
    /* the duration [s] that the bot hold the ball */
    bool has_duration;
    float duration;
} GameEvent_BotHeldBallDeliberately;

/* a bot interfered the ball placement of the other team */
typedef struct _GameEvent_BotInterferedPlacement {
    /* the team that found guilty */
    Team by_team;
    /* the bot that interfered the placement */
    bool has_by_bot;
    uint32_t by_bot;
    /* the location of the bot [m] */
    bool has_location;
    Vector2 location;
} GameEvent_BotInterferedPlacement;

/* a team collected multiple cards (yellow and red), which results in a penalty kick */
typedef struct _GameEvent_MultipleCards {
    /* the team that received multiple yellow cards */
    Team by_team;
} GameEvent_MultipleCards;

/* a team collected multiple fouls, which results in a yellow card */
typedef struct _GameEvent_MultipleFouls {
    /* the team that collected multiple fouls */
    Team by_team;
    /* the list of game events that caused the multiple fouls */
    pb_callback_t caused_game_events;
} GameEvent_MultipleFouls;

/* a team failed to place the ball multiple times in a row */
typedef struct _GameEvent_MultiplePlacementFailures {
    /* the team that failed multiple times */
    Team by_team;
} GameEvent_MultiplePlacementFailures;

/* timeout waiting for the attacking team to perform the free kick */
typedef struct _GameEvent_KickTimeout {
    /* the team that that should have kicked */
    Team by_team;
    /* the location of the ball [m] */
    bool has_location;
    Vector2 location;
    /* the time [s] that was waited */
    bool has_time;
    float time;
} GameEvent_KickTimeout;

/* game was stuck */
typedef struct _GameEvent_NoProgressInGame {
    /* the location of the ball */
    bool has_location;
    Vector2 location;
    /* the time [s] that was waited */
    bool has_time;
    float time;
} GameEvent_NoProgressInGame;

/* ball placement failed */
typedef struct _GameEvent_PlacementFailed {
    /* the team that failed */
    Team by_team;
    /* the remaining distance [m] from ball to placement position */
    bool has_remaining_distance;
    float remaining_distance;
} GameEvent_PlacementFailed;

/* a team was found guilty for minor unsporting behavior */
typedef struct _GameEvent_UnsportingBehaviorMinor {
    /* the team that found guilty */
    Team by_team;
    /* an explanation of the situation and decision */
    pb_callback_t reason;
} GameEvent_UnsportingBehaviorMinor;

/* a team was found guilty for major unsporting behavior */
typedef struct _GameEvent_UnsportingBehaviorMajor {
    /* the team that found guilty */
    Team by_team;
    /* an explanation of the situation and decision */
    pb_callback_t reason;
} GameEvent_UnsportingBehaviorMajor;

/* a keeper held the ball in its defense area for too long */
typedef struct _GameEvent_KeeperHeldBall {
    /* the team that found guilty */
    Team by_team;
    /* the location of the ball [m] */
    bool has_location;
    Vector2 location;
    /* the duration [s] that the keeper hold the ball */
    bool has_duration;
    float duration;
} GameEvent_KeeperHeldBall;

/* a team successfully placed the ball */
typedef struct _GameEvent_PlacementSucceeded {
    /* the team that did the placement */
    Team by_team;
    /* the time [s] taken for placing the ball */
    bool has_time_taken;
    float time_taken;
    /* the distance [m] between placement location and actual ball position */
    bool has_precision;
    float precision;
    /* the distance [m] between the initial ball location and the placement position */
    bool has_distance;
    float distance;
} GameEvent_PlacementSucceeded;

/* both teams are prepared - all conditions are met to continue (with kickoff or penalty kick) */
typedef struct _GameEvent_Prepared {
    /* the time [s] taken for preparing */
    bool has_time_taken;
    float time_taken;
} GameEvent_Prepared;

/* bots are being substituted by a team */
typedef struct _GameEvent_BotSubstitution {
    /* the team that substitutes robots */
    Team by_team;
} GameEvent_BotSubstitution;

/* A challenge flag, requested by a team previously, is flagged */
typedef struct _GameEvent_ChallengeFlag {
    /* the team that substitutes robots */
    Team by_team;
} GameEvent_ChallengeFlag;

/* An emergency stop, requested by team previously, occurred */
typedef struct _GameEvent_EmergencyStop {
    /* the team that substitutes robots */
    Team by_team;
} GameEvent_EmergencyStop;

/* a team has too many robots on the field */
typedef struct _GameEvent_TooManyRobots {
    /* the team that has too many robots */
    Team by_team;
    /* number of robots allowed at the moment */
    bool has_num_robots_allowed;
    int32_t num_robots_allowed;
    /* number of robots currently on the field */
    bool has_num_robots_on_field;
    int32_t num_robots_on_field;
    /* the location of the ball at the moment when this foul occurred [m] */
    bool has_ball_location;
    Vector2 ball_location;
} GameEvent_TooManyRobots;

/* a robot chipped the ball over the field boundary out of the playing surface */
typedef struct _GameEvent_BoundaryCrossing {
    /* the team that has too many robots */
    Team by_team;
    /* the location of the ball [m] */
    bool has_location;
    Vector2 location;
} GameEvent_BoundaryCrossing;

/* the penalty kick failed (by time or by keeper) */
typedef struct _GameEvent_PenaltyKickFailed {
    /* the team that last touched the ball */
    Team by_team;
    /* the location of the ball at the moment of this event [m] */
    bool has_location;
    Vector2 location;
} GameEvent_PenaltyKickFailed;

/* GameEvent contains exactly one game event
 Each game event has optional and required fields. The required fields are mandatory to process the event.
 Some optional fields are only used for visualization, others are required to determine the ball placement position.
 If fields are missing that are required for the ball placement position, no ball placement command will be issued.
 Fields are marked optional to make testing and extending of the protocol easier.
 An autoRef should ideally set all fields, except if there are good reasons to not do so. */
typedef struct _GameEvent {
    pb_size_t which_event;
    union {
        /* replaced by ready_to_continue flag */
        GameEvent_Prepared prepared;
        GameEvent_NoProgressInGame no_progress_in_game;
        GameEvent_PlacementFailed placement_failed;
        GameEvent_PlacementSucceeded placement_succeeded;
        GameEvent_BallLeftField ball_left_field_touch_line;
        GameEvent_BallLeftField ball_left_field_goal_line;
        GameEvent_Goal goal;
        /* obsolete */
        GameEvent_IndirectGoal indirect_goal;
        /* replaced by the meta-information in the possible_goal event */
        GameEvent_ChippedGoal chipped_goal;
        GameEvent_AimlessKick aimless_kick;
        /* obsolete */
        GameEvent_KickTimeout kick_timeout;
        GameEvent_KeeperHeldBall keeper_held_ball;
        GameEvent_AttackerDoubleTouchedBall attacker_double_touched_ball;
        GameEvent_AttackerTouchedBallInDefenseArea attacker_touched_ball_in_defense_area;
        /* rule removed */
        GameEvent_AttackerTouchedOpponentInDefenseArea attacker_touched_opponent_in_defense_area;
        GameEvent_BotDribbledBallTooFar bot_dribbled_ball_too_far;
        GameEvent_BotKickedBallTooFast bot_kicked_ball_too_fast;
        GameEvent_AttackerTooCloseToDefenseArea attacker_too_close_to_defense_area;
        GameEvent_BotInterferedPlacement bot_interfered_placement;
        GameEvent_BotCrashDrawn bot_crash_drawn;
        GameEvent_BotCrashUnique bot_crash_unique;
        /* obsolete */
        GameEvent_BotCrashUnique bot_crash_unique_skipped;
        GameEvent_BotPushedBot bot_pushed_bot;
        /* can not be used as long as autoRefs do not judge pushing */
        GameEvent_BotPushedBot bot_pushed_bot_skipped;
        GameEvent_BotHeldBallDeliberately bot_held_ball_deliberately;
        GameEvent_BotTippedOver bot_tipped_over;
        GameEvent_BotTooFastInStop bot_too_fast_in_stop;
        GameEvent_DefenderTooCloseToKickPoint defender_too_close_to_kick_point;
        /* rule removed */
        GameEvent_DefenderInDefenseAreaPartially defender_in_defense_area_partially;
        GameEvent_DefenderInDefenseArea defender_in_defense_area;
        GameEvent_MultipleCards multiple_cards;
        /* the referee msg already indicates this */
        GameEvent_MultiplePlacementFailures multiple_placement_failures;
        GameEvent_MultipleFouls multiple_fouls;
        GameEvent_UnsportingBehaviorMinor unsporting_behavior_minor;
        GameEvent_UnsportingBehaviorMajor unsporting_behavior_major;
        GameEvent_BotSubstitution bot_substitution;
        GameEvent_TooManyRobots too_many_robots;
        GameEvent_Goal possible_goal;
        /* obsolete */
        GameEvent_AttackerTouchedOpponentInDefenseArea attacker_touched_opponent_in_defense_area_skipped;
        GameEvent_BoundaryCrossing boundary_crossing;
        GameEvent_Goal invalid_goal;
        GameEvent_PenaltyKickFailed penalty_kick_failed;
        GameEvent_ChallengeFlag challenge_flag;
        GameEvent_EmergencyStop emergency_stop;
    } event;
    bool has_type;
    GameEvent_Type type;
    /* The origins of this game event.
 Empty, if it originates from game controller.
 Contains autoRef name(s), if it originates from one or more autoRefs.
 Ignored if sent by autoRef to game controller. */
    pb_callback_t origin;
} GameEvent;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _GameEvent_Type_MIN GameEvent_Type_UNKNOWN_GAME_EVENT_TYPE
#define _GameEvent_Type_MAX GameEvent_Type_EMERGENCY_STOP
#define _GameEvent_Type_ARRAYSIZE ((GameEvent_Type)(GameEvent_Type_EMERGENCY_STOP+1))

#define GameEvent_type_ENUMTYPE GameEvent_Type

#define GameEvent_BallLeftField_by_team_ENUMTYPE Team

#define GameEvent_AimlessKick_by_team_ENUMTYPE Team

#define GameEvent_Goal_by_team_ENUMTYPE Team
#define GameEvent_Goal_kicking_team_ENUMTYPE Team

#define GameEvent_IndirectGoal_by_team_ENUMTYPE Team

#define GameEvent_ChippedGoal_by_team_ENUMTYPE Team

#define GameEvent_BotTooFastInStop_by_team_ENUMTYPE Team

#define GameEvent_DefenderTooCloseToKickPoint_by_team_ENUMTYPE Team


#define GameEvent_BotCrashUnique_by_team_ENUMTYPE Team

#define GameEvent_BotPushedBot_by_team_ENUMTYPE Team

#define GameEvent_BotTippedOver_by_team_ENUMTYPE Team

#define GameEvent_DefenderInDefenseArea_by_team_ENUMTYPE Team

#define GameEvent_DefenderInDefenseAreaPartially_by_team_ENUMTYPE Team

#define GameEvent_AttackerTouchedBallInDefenseArea_by_team_ENUMTYPE Team

#define GameEvent_BotKickedBallTooFast_by_team_ENUMTYPE Team

#define GameEvent_BotDribbledBallTooFar_by_team_ENUMTYPE Team

#define GameEvent_AttackerTouchedOpponentInDefenseArea_by_team_ENUMTYPE Team

#define GameEvent_AttackerDoubleTouchedBall_by_team_ENUMTYPE Team

#define GameEvent_AttackerTooCloseToDefenseArea_by_team_ENUMTYPE Team

#define GameEvent_BotHeldBallDeliberately_by_team_ENUMTYPE Team

#define GameEvent_BotInterferedPlacement_by_team_ENUMTYPE Team

#define GameEvent_MultipleCards_by_team_ENUMTYPE Team

#define GameEvent_MultipleFouls_by_team_ENUMTYPE Team

#define GameEvent_MultiplePlacementFailures_by_team_ENUMTYPE Team

#define GameEvent_KickTimeout_by_team_ENUMTYPE Team


#define GameEvent_PlacementFailed_by_team_ENUMTYPE Team

#define GameEvent_UnsportingBehaviorMinor_by_team_ENUMTYPE Team

#define GameEvent_UnsportingBehaviorMajor_by_team_ENUMTYPE Team

#define GameEvent_KeeperHeldBall_by_team_ENUMTYPE Team

#define GameEvent_PlacementSucceeded_by_team_ENUMTYPE Team


#define GameEvent_BotSubstitution_by_team_ENUMTYPE Team

#define GameEvent_ChallengeFlag_by_team_ENUMTYPE Team

#define GameEvent_EmergencyStop_by_team_ENUMTYPE Team

#define GameEvent_TooManyRobots_by_team_ENUMTYPE Team

#define GameEvent_BoundaryCrossing_by_team_ENUMTYPE Team

#define GameEvent_PenaltyKickFailed_by_team_ENUMTYPE Team


/* Initializer values for message structs */
#define GameEvent_init_default                   {0, {GameEvent_Prepared_init_default}, false, _GameEvent_Type_MIN, {{NULL}, NULL}}
#define GameEvent_BallLeftField_init_default     {_Team_MIN, false, 0, false, Vector2_init_default}
#define GameEvent_AimlessKick_init_default       {_Team_MIN, false, 0, false, Vector2_init_default, false, Vector2_init_default}
#define GameEvent_Goal_init_default              {_Team_MIN, false, 0, false, Vector2_init_default, false, Vector2_init_default, false, 0, false, _Team_MIN, false, 0, false, 0, {{NULL}, NULL}}
#define GameEvent_IndirectGoal_init_default      {_Team_MIN, false, 0, false, Vector2_init_default, false, Vector2_init_default}
#define GameEvent_ChippedGoal_init_default       {_Team_MIN, false, 0, false, Vector2_init_default, false, Vector2_init_default, false, 0}
#define GameEvent_BotTooFastInStop_init_default  {_Team_MIN, false, 0, false, Vector2_init_default, false, 0}
#define GameEvent_DefenderTooCloseToKickPoint_init_default {_Team_MIN, false, 0, false, Vector2_init_default, false, 0}
#define GameEvent_BotCrashDrawn_init_default     {false, 0, false, 0, false, Vector2_init_default, false, 0, false, 0, false, 0}
#define GameEvent_BotCrashUnique_init_default    {_Team_MIN, false, 0, false, 0, false, Vector2_init_default, false, 0, false, 0, false, 0}
#define GameEvent_BotPushedBot_init_default      {_Team_MIN, false, 0, false, 0, false, Vector2_init_default, false, 0}
#define GameEvent_BotTippedOver_init_default     {_Team_MIN, false, 0, false, Vector2_init_default, false, Vector2_init_default}
#define GameEvent_DefenderInDefenseArea_init_default {_Team_MIN, false, 0, false, Vector2_init_default, false, 0}
#define GameEvent_DefenderInDefenseAreaPartially_init_default {_Team_MIN, false, 0, false, Vector2_init_default, false, 0, false, Vector2_init_default}
#define GameEvent_AttackerTouchedBallInDefenseArea_init_default {_Team_MIN, false, 0, false, Vector2_init_default, false, 0}
#define GameEvent_BotKickedBallTooFast_init_default {_Team_MIN, false, 0, false, Vector2_init_default, false, 0, false, 0}
#define GameEvent_BotDribbledBallTooFar_init_default {_Team_MIN, false, 0, false, Vector2_init_default, false, Vector2_init_default}
#define GameEvent_AttackerTouchedOpponentInDefenseArea_init_default {_Team_MIN, false, 0, false, Vector2_init_default, false, 0}
#define GameEvent_AttackerDoubleTouchedBall_init_default {_Team_MIN, false, 0, false, Vector2_init_default}
#define GameEvent_AttackerTooCloseToDefenseArea_init_default {_Team_MIN, false, 0, false, Vector2_init_default, false, 0, false, Vector2_init_default}
#define GameEvent_BotHeldBallDeliberately_init_default {_Team_MIN, false, 0, false, Vector2_init_default, false, 0}
#define GameEvent_BotInterferedPlacement_init_default {_Team_MIN, false, 0, false, Vector2_init_default}
#define GameEvent_MultipleCards_init_default     {_Team_MIN}
#define GameEvent_MultipleFouls_init_default     {_Team_MIN, {{NULL}, NULL}}
#define GameEvent_MultiplePlacementFailures_init_default {_Team_MIN}
#define GameEvent_KickTimeout_init_default       {_Team_MIN, false, Vector2_init_default, false, 0}
#define GameEvent_NoProgressInGame_init_default  {false, Vector2_init_default, false, 0}
#define GameEvent_PlacementFailed_init_default   {_Team_MIN, false, 0}
#define GameEvent_UnsportingBehaviorMinor_init_default {_Team_MIN, {{NULL}, NULL}}
#define GameEvent_UnsportingBehaviorMajor_init_default {_Team_MIN, {{NULL}, NULL}}
#define GameEvent_KeeperHeldBall_init_default    {_Team_MIN, false, Vector2_init_default, false, 0}
#define GameEvent_PlacementSucceeded_init_default {_Team_MIN, false, 0, false, 0, false, 0}
#define GameEvent_Prepared_init_default          {false, 0}
#define GameEvent_BotSubstitution_init_default   {_Team_MIN}
#define GameEvent_ChallengeFlag_init_default     {_Team_MIN}
#define GameEvent_EmergencyStop_init_default     {_Team_MIN}
#define GameEvent_TooManyRobots_init_default     {_Team_MIN, false, 0, false, 0, false, Vector2_init_default}
#define GameEvent_BoundaryCrossing_init_default  {_Team_MIN, false, Vector2_init_default}
#define GameEvent_PenaltyKickFailed_init_default {_Team_MIN, false, Vector2_init_default}
#define GameEvent_init_zero                      {0, {GameEvent_Prepared_init_zero}, false, _GameEvent_Type_MIN, {{NULL}, NULL}}
#define GameEvent_BallLeftField_init_zero        {_Team_MIN, false, 0, false, Vector2_init_zero}
#define GameEvent_AimlessKick_init_zero          {_Team_MIN, false, 0, false, Vector2_init_zero, false, Vector2_init_zero}
#define GameEvent_Goal_init_zero                 {_Team_MIN, false, 0, false, Vector2_init_zero, false, Vector2_init_zero, false, 0, false, _Team_MIN, false, 0, false, 0, {{NULL}, NULL}}
#define GameEvent_IndirectGoal_init_zero         {_Team_MIN, false, 0, false, Vector2_init_zero, false, Vector2_init_zero}
#define GameEvent_ChippedGoal_init_zero          {_Team_MIN, false, 0, false, Vector2_init_zero, false, Vector2_init_zero, false, 0}
#define GameEvent_BotTooFastInStop_init_zero     {_Team_MIN, false, 0, false, Vector2_init_zero, false, 0}
#define GameEvent_DefenderTooCloseToKickPoint_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero, false, 0}
#define GameEvent_BotCrashDrawn_init_zero        {false, 0, false, 0, false, Vector2_init_zero, false, 0, false, 0, false, 0}
#define GameEvent_BotCrashUnique_init_zero       {_Team_MIN, false, 0, false, 0, false, Vector2_init_zero, false, 0, false, 0, false, 0}
#define GameEvent_BotPushedBot_init_zero         {_Team_MIN, false, 0, false, 0, false, Vector2_init_zero, false, 0}
#define GameEvent_BotTippedOver_init_zero        {_Team_MIN, false, 0, false, Vector2_init_zero, false, Vector2_init_zero}
#define GameEvent_DefenderInDefenseArea_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero, false, 0}
#define GameEvent_DefenderInDefenseAreaPartially_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero, false, 0, false, Vector2_init_zero}
#define GameEvent_AttackerTouchedBallInDefenseArea_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero, false, 0}
#define GameEvent_BotKickedBallTooFast_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero, false, 0, false, 0}
#define GameEvent_BotDribbledBallTooFar_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero, false, Vector2_init_zero}
#define GameEvent_AttackerTouchedOpponentInDefenseArea_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero, false, 0}
#define GameEvent_AttackerDoubleTouchedBall_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero}
#define GameEvent_AttackerTooCloseToDefenseArea_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero, false, 0, false, Vector2_init_zero}
#define GameEvent_BotHeldBallDeliberately_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero, false, 0}
#define GameEvent_BotInterferedPlacement_init_zero {_Team_MIN, false, 0, false, Vector2_init_zero}
#define GameEvent_MultipleCards_init_zero        {_Team_MIN}
#define GameEvent_MultipleFouls_init_zero        {_Team_MIN, {{NULL}, NULL}}
#define GameEvent_MultiplePlacementFailures_init_zero {_Team_MIN}
#define GameEvent_KickTimeout_init_zero          {_Team_MIN, false, Vector2_init_zero, false, 0}
#define GameEvent_NoProgressInGame_init_zero     {false, Vector2_init_zero, false, 0}
#define GameEvent_PlacementFailed_init_zero      {_Team_MIN, false, 0}
#define GameEvent_UnsportingBehaviorMinor_init_zero {_Team_MIN, {{NULL}, NULL}}
#define GameEvent_UnsportingBehaviorMajor_init_zero {_Team_MIN, {{NULL}, NULL}}
#define GameEvent_KeeperHeldBall_init_zero       {_Team_MIN, false, Vector2_init_zero, false, 0}
#define GameEvent_PlacementSucceeded_init_zero   {_Team_MIN, false, 0, false, 0, false, 0}
#define GameEvent_Prepared_init_zero             {false, 0}
#define GameEvent_BotSubstitution_init_zero      {_Team_MIN}
#define GameEvent_ChallengeFlag_init_zero        {_Team_MIN}
#define GameEvent_EmergencyStop_init_zero        {_Team_MIN}
#define GameEvent_TooManyRobots_init_zero        {_Team_MIN, false, 0, false, 0, false, Vector2_init_zero}
#define GameEvent_BoundaryCrossing_init_zero     {_Team_MIN, false, Vector2_init_zero}
#define GameEvent_PenaltyKickFailed_init_zero    {_Team_MIN, false, Vector2_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define GameEvent_BallLeftField_by_team_tag      1
#define GameEvent_BallLeftField_by_bot_tag       2
#define GameEvent_BallLeftField_location_tag     3
#define GameEvent_AimlessKick_by_team_tag        1
#define GameEvent_AimlessKick_by_bot_tag         2
#define GameEvent_AimlessKick_location_tag       3
#define GameEvent_AimlessKick_kick_location_tag  4
#define GameEvent_Goal_by_team_tag               1
#define GameEvent_Goal_kicking_bot_tag           2
#define GameEvent_Goal_location_tag              3
#define GameEvent_Goal_kick_location_tag         4
#define GameEvent_Goal_max_ball_height_tag       5
#define GameEvent_Goal_kicking_team_tag          6
#define GameEvent_Goal_num_robots_by_team_tag    7
#define GameEvent_Goal_last_touch_by_team_tag    8
#define GameEvent_Goal_message_tag               9
#define GameEvent_IndirectGoal_by_team_tag       1
#define GameEvent_IndirectGoal_by_bot_tag        2
#define GameEvent_IndirectGoal_location_tag      3
#define GameEvent_IndirectGoal_kick_location_tag 4
#define GameEvent_ChippedGoal_by_team_tag        1
#define GameEvent_ChippedGoal_by_bot_tag         2
#define GameEvent_ChippedGoal_location_tag       3
#define GameEvent_ChippedGoal_kick_location_tag  4
#define GameEvent_ChippedGoal_max_ball_height_tag 5
#define GameEvent_BotTooFastInStop_by_team_tag   1
#define GameEvent_BotTooFastInStop_by_bot_tag    2
#define GameEvent_BotTooFastInStop_location_tag  3
#define GameEvent_BotTooFastInStop_speed_tag     4
#define GameEvent_DefenderTooCloseToKickPoint_by_team_tag 1
#define GameEvent_DefenderTooCloseToKickPoint_by_bot_tag 2
#define GameEvent_DefenderTooCloseToKickPoint_location_tag 3
#define GameEvent_DefenderTooCloseToKickPoint_distance_tag 4
#define GameEvent_BotCrashDrawn_bot_yellow_tag   1
#define GameEvent_BotCrashDrawn_bot_blue_tag     2
#define GameEvent_BotCrashDrawn_location_tag     3
#define GameEvent_BotCrashDrawn_crash_speed_tag  4
#define GameEvent_BotCrashDrawn_speed_diff_tag   5
#define GameEvent_BotCrashDrawn_crash_angle_tag  6
#define GameEvent_BotCrashUnique_by_team_tag     1
#define GameEvent_BotCrashUnique_violator_tag    2
#define GameEvent_BotCrashUnique_victim_tag      3
#define GameEvent_BotCrashUnique_location_tag    4
#define GameEvent_BotCrashUnique_crash_speed_tag 5
#define GameEvent_BotCrashUnique_speed_diff_tag  6
#define GameEvent_BotCrashUnique_crash_angle_tag 7
#define GameEvent_BotPushedBot_by_team_tag       1
#define GameEvent_BotPushedBot_violator_tag      2
#define GameEvent_BotPushedBot_victim_tag        3
#define GameEvent_BotPushedBot_location_tag      4
#define GameEvent_BotPushedBot_pushed_distance_tag 5
#define GameEvent_BotTippedOver_by_team_tag      1
#define GameEvent_BotTippedOver_by_bot_tag       2
#define GameEvent_BotTippedOver_location_tag     3
#define GameEvent_BotTippedOver_ball_location_tag 4
#define GameEvent_DefenderInDefenseArea_by_team_tag 1
#define GameEvent_DefenderInDefenseArea_by_bot_tag 2
#define GameEvent_DefenderInDefenseArea_location_tag 3
#define GameEvent_DefenderInDefenseArea_distance_tag 4
#define GameEvent_DefenderInDefenseAreaPartially_by_team_tag 1
#define GameEvent_DefenderInDefenseAreaPartially_by_bot_tag 2
#define GameEvent_DefenderInDefenseAreaPartially_location_tag 3
#define GameEvent_DefenderInDefenseAreaPartially_distance_tag 4
#define GameEvent_DefenderInDefenseAreaPartially_ball_location_tag 5
#define GameEvent_AttackerTouchedBallInDefenseArea_by_team_tag 1
#define GameEvent_AttackerTouchedBallInDefenseArea_by_bot_tag 2
#define GameEvent_AttackerTouchedBallInDefenseArea_location_tag 3
#define GameEvent_AttackerTouchedBallInDefenseArea_distance_tag 4
#define GameEvent_BotKickedBallTooFast_by_team_tag 1
#define GameEvent_BotKickedBallTooFast_by_bot_tag 2
#define GameEvent_BotKickedBallTooFast_location_tag 3
#define GameEvent_BotKickedBallTooFast_initial_ball_speed_tag 4
#define GameEvent_BotKickedBallTooFast_chipped_tag 5
#define GameEvent_BotDribbledBallTooFar_by_team_tag 1
#define GameEvent_BotDribbledBallTooFar_by_bot_tag 2
#define GameEvent_BotDribbledBallTooFar_start_tag 3
#define GameEvent_BotDribbledBallTooFar_end_tag  4
#define GameEvent_AttackerTouchedOpponentInDefenseArea_by_team_tag 1
#define GameEvent_AttackerTouchedOpponentInDefenseArea_by_bot_tag 2
#define GameEvent_AttackerTouchedOpponentInDefenseArea_location_tag 3
#define GameEvent_AttackerTouchedOpponentInDefenseArea_victim_tag 4
#define GameEvent_AttackerDoubleTouchedBall_by_team_tag 1
#define GameEvent_AttackerDoubleTouchedBall_by_bot_tag 2
#define GameEvent_AttackerDoubleTouchedBall_location_tag 3
#define GameEvent_AttackerTooCloseToDefenseArea_by_team_tag 1
#define GameEvent_AttackerTooCloseToDefenseArea_by_bot_tag 2
#define GameEvent_AttackerTooCloseToDefenseArea_location_tag 3
#define GameEvent_AttackerTooCloseToDefenseArea_distance_tag 4
#define GameEvent_AttackerTooCloseToDefenseArea_ball_location_tag 5
#define GameEvent_BotHeldBallDeliberately_by_team_tag 1
#define GameEvent_BotHeldBallDeliberately_by_bot_tag 2
#define GameEvent_BotHeldBallDeliberately_location_tag 3
#define GameEvent_BotHeldBallDeliberately_duration_tag 4
#define GameEvent_BotInterferedPlacement_by_team_tag 1
#define GameEvent_BotInterferedPlacement_by_bot_tag 2
#define GameEvent_BotInterferedPlacement_location_tag 3
#define GameEvent_MultipleCards_by_team_tag      1
#define GameEvent_MultipleFouls_by_team_tag      1
#define GameEvent_MultipleFouls_caused_game_events_tag 2
#define GameEvent_MultiplePlacementFailures_by_team_tag 1
#define GameEvent_KickTimeout_by_team_tag        1
#define GameEvent_KickTimeout_location_tag       2
#define GameEvent_KickTimeout_time_tag           3
#define GameEvent_NoProgressInGame_location_tag  1
#define GameEvent_NoProgressInGame_time_tag      2
#define GameEvent_PlacementFailed_by_team_tag    1
#define GameEvent_PlacementFailed_remaining_distance_tag 2
#define GameEvent_UnsportingBehaviorMinor_by_team_tag 1
#define GameEvent_UnsportingBehaviorMinor_reason_tag 2
#define GameEvent_UnsportingBehaviorMajor_by_team_tag 1
#define GameEvent_UnsportingBehaviorMajor_reason_tag 2
#define GameEvent_KeeperHeldBall_by_team_tag     1
#define GameEvent_KeeperHeldBall_location_tag    2
#define GameEvent_KeeperHeldBall_duration_tag    3
#define GameEvent_PlacementSucceeded_by_team_tag 1
#define GameEvent_PlacementSucceeded_time_taken_tag 2
#define GameEvent_PlacementSucceeded_precision_tag 3
#define GameEvent_PlacementSucceeded_distance_tag 4
#define GameEvent_Prepared_time_taken_tag        1
#define GameEvent_BotSubstitution_by_team_tag    1
#define GameEvent_ChallengeFlag_by_team_tag      1
#define GameEvent_EmergencyStop_by_team_tag      1
#define GameEvent_TooManyRobots_by_team_tag      1
#define GameEvent_TooManyRobots_num_robots_allowed_tag 2
#define GameEvent_TooManyRobots_num_robots_on_field_tag 3
#define GameEvent_TooManyRobots_ball_location_tag 4
#define GameEvent_BoundaryCrossing_by_team_tag   1
#define GameEvent_BoundaryCrossing_location_tag  2
#define GameEvent_PenaltyKickFailed_by_team_tag  1
#define GameEvent_PenaltyKickFailed_location_tag 2
#define GameEvent_prepared_tag                   1
#define GameEvent_no_progress_in_game_tag        2
#define GameEvent_placement_failed_tag           3
#define GameEvent_placement_succeeded_tag        5
#define GameEvent_ball_left_field_touch_line_tag 6
#define GameEvent_ball_left_field_goal_line_tag  7
#define GameEvent_goal_tag                       8
#define GameEvent_indirect_goal_tag              9
#define GameEvent_chipped_goal_tag               10
#define GameEvent_aimless_kick_tag               11
#define GameEvent_kick_timeout_tag               12
#define GameEvent_keeper_held_ball_tag           13
#define GameEvent_attacker_double_touched_ball_tag 14
#define GameEvent_attacker_touched_ball_in_defense_area_tag 15
#define GameEvent_attacker_touched_opponent_in_defense_area_tag 16
#define GameEvent_bot_dribbled_ball_too_far_tag  17
#define GameEvent_bot_kicked_ball_too_fast_tag   18
#define GameEvent_attacker_too_close_to_defense_area_tag 19
#define GameEvent_bot_interfered_placement_tag   20
#define GameEvent_bot_crash_drawn_tag            21
#define GameEvent_bot_crash_unique_tag           22
#define GameEvent_bot_crash_unique_skipped_tag   23
#define GameEvent_bot_pushed_bot_tag             24
#define GameEvent_bot_pushed_bot_skipped_tag     25
#define GameEvent_bot_held_ball_deliberately_tag 26
#define GameEvent_bot_tipped_over_tag            27
#define GameEvent_bot_too_fast_in_stop_tag       28
#define GameEvent_defender_too_close_to_kick_point_tag 29
#define GameEvent_defender_in_defense_area_partially_tag 30
#define GameEvent_defender_in_defense_area_tag   31
#define GameEvent_multiple_cards_tag             32
#define GameEvent_multiple_placement_failures_tag 33
#define GameEvent_multiple_fouls_tag             34
#define GameEvent_unsporting_behavior_minor_tag  35
#define GameEvent_unsporting_behavior_major_tag  36
#define GameEvent_bot_substitution_tag           37
#define GameEvent_too_many_robots_tag            38
#define GameEvent_possible_goal_tag              39
#define GameEvent_attacker_touched_opponent_in_defense_area_skipped_tag 42
#define GameEvent_boundary_crossing_tag          43
#define GameEvent_invalid_goal_tag               44
#define GameEvent_penalty_kick_failed_tag        45
#define GameEvent_challenge_flag_tag             46
#define GameEvent_emergency_stop_tag             47
#define GameEvent_type_tag                       40
#define GameEvent_origin_tag                     41

/* Struct field encoding specification for nanopb */
#define GameEvent_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,prepared,event.prepared),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,no_progress_in_game,event.no_progress_in_game),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,placement_failed,event.placement_failed),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,placement_succeeded,event.placement_succeeded),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,ball_left_field_touch_line,event.ball_left_field_touch_line),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,ball_left_field_goal_line,event.ball_left_field_goal_line),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,goal,event.goal),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,indirect_goal,event.indirect_goal),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,chipped_goal,event.chipped_goal),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,aimless_kick,event.aimless_kick),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,kick_timeout,event.kick_timeout),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,keeper_held_ball,event.keeper_held_ball),  13) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,attacker_double_touched_ball,event.attacker_double_touched_ball),  14) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,attacker_touched_ball_in_defense_area,event.attacker_touched_ball_in_defense_area),  15) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,attacker_touched_opponent_in_defense_area,event.attacker_touched_opponent_in_defense_area),  16) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_dribbled_ball_too_far,event.bot_dribbled_ball_too_far),  17) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_kicked_ball_too_fast,event.bot_kicked_ball_too_fast),  18) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,attacker_too_close_to_defense_area,event.attacker_too_close_to_defense_area),  19) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_interfered_placement,event.bot_interfered_placement),  20) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_crash_drawn,event.bot_crash_drawn),  21) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_crash_unique,event.bot_crash_unique),  22) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_crash_unique_skipped,event.bot_crash_unique_skipped),  23) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_pushed_bot,event.bot_pushed_bot),  24) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_pushed_bot_skipped,event.bot_pushed_bot_skipped),  25) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_held_ball_deliberately,event.bot_held_ball_deliberately),  26) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_tipped_over,event.bot_tipped_over),  27) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_too_fast_in_stop,event.bot_too_fast_in_stop),  28) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,defender_too_close_to_kick_point,event.defender_too_close_to_kick_point),  29) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,defender_in_defense_area_partially,event.defender_in_defense_area_partially),  30) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,defender_in_defense_area,event.defender_in_defense_area),  31) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,multiple_cards,event.multiple_cards),  32) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,multiple_placement_failures,event.multiple_placement_failures),  33) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,multiple_fouls,event.multiple_fouls),  34) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,unsporting_behavior_minor,event.unsporting_behavior_minor),  35) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,unsporting_behavior_major,event.unsporting_behavior_major),  36) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,bot_substitution,event.bot_substitution),  37) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,too_many_robots,event.too_many_robots),  38) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,possible_goal,event.possible_goal),  39) \
X(a, STATIC,   OPTIONAL, UENUM,    type,             40) \
X(a, CALLBACK, REPEATED, STRING,   origin,           41) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,attacker_touched_opponent_in_defense_area_skipped,event.attacker_touched_opponent_in_defense_area_skipped),  42) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,boundary_crossing,event.boundary_crossing),  43) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,invalid_goal,event.invalid_goal),  44) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,penalty_kick_failed,event.penalty_kick_failed),  45) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,challenge_flag,event.challenge_flag),  46) \
X(a, STATIC,   ONEOF,    MESSAGE,  (event,emergency_stop,event.emergency_stop),  47)
#define GameEvent_CALLBACK pb_default_field_callback
#define GameEvent_DEFAULT NULL
#define GameEvent_event_prepared_MSGTYPE GameEvent_Prepared
#define GameEvent_event_no_progress_in_game_MSGTYPE GameEvent_NoProgressInGame
#define GameEvent_event_placement_failed_MSGTYPE GameEvent_PlacementFailed
#define GameEvent_event_placement_succeeded_MSGTYPE GameEvent_PlacementSucceeded
#define GameEvent_event_ball_left_field_touch_line_MSGTYPE GameEvent_BallLeftField
#define GameEvent_event_ball_left_field_goal_line_MSGTYPE GameEvent_BallLeftField
#define GameEvent_event_goal_MSGTYPE GameEvent_Goal
#define GameEvent_event_indirect_goal_MSGTYPE GameEvent_IndirectGoal
#define GameEvent_event_chipped_goal_MSGTYPE GameEvent_ChippedGoal
#define GameEvent_event_aimless_kick_MSGTYPE GameEvent_AimlessKick
#define GameEvent_event_kick_timeout_MSGTYPE GameEvent_KickTimeout
#define GameEvent_event_keeper_held_ball_MSGTYPE GameEvent_KeeperHeldBall
#define GameEvent_event_attacker_double_touched_ball_MSGTYPE GameEvent_AttackerDoubleTouchedBall
#define GameEvent_event_attacker_touched_ball_in_defense_area_MSGTYPE GameEvent_AttackerTouchedBallInDefenseArea
#define GameEvent_event_attacker_touched_opponent_in_defense_area_MSGTYPE GameEvent_AttackerTouchedOpponentInDefenseArea
#define GameEvent_event_bot_dribbled_ball_too_far_MSGTYPE GameEvent_BotDribbledBallTooFar
#define GameEvent_event_bot_kicked_ball_too_fast_MSGTYPE GameEvent_BotKickedBallTooFast
#define GameEvent_event_attacker_too_close_to_defense_area_MSGTYPE GameEvent_AttackerTooCloseToDefenseArea
#define GameEvent_event_bot_interfered_placement_MSGTYPE GameEvent_BotInterferedPlacement
#define GameEvent_event_bot_crash_drawn_MSGTYPE GameEvent_BotCrashDrawn
#define GameEvent_event_bot_crash_unique_MSGTYPE GameEvent_BotCrashUnique
#define GameEvent_event_bot_crash_unique_skipped_MSGTYPE GameEvent_BotCrashUnique
#define GameEvent_event_bot_pushed_bot_MSGTYPE GameEvent_BotPushedBot
#define GameEvent_event_bot_pushed_bot_skipped_MSGTYPE GameEvent_BotPushedBot
#define GameEvent_event_bot_held_ball_deliberately_MSGTYPE GameEvent_BotHeldBallDeliberately
#define GameEvent_event_bot_tipped_over_MSGTYPE GameEvent_BotTippedOver
#define GameEvent_event_bot_too_fast_in_stop_MSGTYPE GameEvent_BotTooFastInStop
#define GameEvent_event_defender_too_close_to_kick_point_MSGTYPE GameEvent_DefenderTooCloseToKickPoint
#define GameEvent_event_defender_in_defense_area_partially_MSGTYPE GameEvent_DefenderInDefenseAreaPartially
#define GameEvent_event_defender_in_defense_area_MSGTYPE GameEvent_DefenderInDefenseArea
#define GameEvent_event_multiple_cards_MSGTYPE GameEvent_MultipleCards
#define GameEvent_event_multiple_placement_failures_MSGTYPE GameEvent_MultiplePlacementFailures
#define GameEvent_event_multiple_fouls_MSGTYPE GameEvent_MultipleFouls
#define GameEvent_event_unsporting_behavior_minor_MSGTYPE GameEvent_UnsportingBehaviorMinor
#define GameEvent_event_unsporting_behavior_major_MSGTYPE GameEvent_UnsportingBehaviorMajor
#define GameEvent_event_bot_substitution_MSGTYPE GameEvent_BotSubstitution
#define GameEvent_event_too_many_robots_MSGTYPE GameEvent_TooManyRobots
#define GameEvent_event_possible_goal_MSGTYPE GameEvent_Goal
#define GameEvent_event_attacker_touched_opponent_in_defense_area_skipped_MSGTYPE GameEvent_AttackerTouchedOpponentInDefenseArea
#define GameEvent_event_boundary_crossing_MSGTYPE GameEvent_BoundaryCrossing
#define GameEvent_event_invalid_goal_MSGTYPE GameEvent_Goal
#define GameEvent_event_penalty_kick_failed_MSGTYPE GameEvent_PenaltyKickFailed
#define GameEvent_event_challenge_flag_MSGTYPE GameEvent_ChallengeFlag
#define GameEvent_event_emergency_stop_MSGTYPE GameEvent_EmergencyStop

#define GameEvent_BallLeftField_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3)
#define GameEvent_BallLeftField_CALLBACK NULL
#define GameEvent_BallLeftField_DEFAULT NULL
#define GameEvent_BallLeftField_location_MSGTYPE Vector2

#define GameEvent_AimlessKick_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  kick_location,     4)
#define GameEvent_AimlessKick_CALLBACK NULL
#define GameEvent_AimlessKick_DEFAULT NULL
#define GameEvent_AimlessKick_location_MSGTYPE Vector2
#define GameEvent_AimlessKick_kick_location_MSGTYPE Vector2

#define GameEvent_Goal_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   kicking_bot,       2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  kick_location,     4) \
X(a, STATIC,   OPTIONAL, FLOAT,    max_ball_height,   5) \
X(a, STATIC,   OPTIONAL, UENUM,    kicking_team,      6) \
X(a, STATIC,   OPTIONAL, UINT32,   num_robots_by_team,   7) \
X(a, STATIC,   OPTIONAL, UINT64,   last_touch_by_team,   8) \
X(a, CALLBACK, OPTIONAL, STRING,   message,           9)
#define GameEvent_Goal_CALLBACK pb_default_field_callback
#define GameEvent_Goal_DEFAULT NULL
#define GameEvent_Goal_location_MSGTYPE Vector2
#define GameEvent_Goal_kick_location_MSGTYPE Vector2

#define GameEvent_IndirectGoal_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  kick_location,     4)
#define GameEvent_IndirectGoal_CALLBACK NULL
#define GameEvent_IndirectGoal_DEFAULT NULL
#define GameEvent_IndirectGoal_location_MSGTYPE Vector2
#define GameEvent_IndirectGoal_kick_location_MSGTYPE Vector2

#define GameEvent_ChippedGoal_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  kick_location,     4) \
X(a, STATIC,   OPTIONAL, FLOAT,    max_ball_height,   5)
#define GameEvent_ChippedGoal_CALLBACK NULL
#define GameEvent_ChippedGoal_DEFAULT NULL
#define GameEvent_ChippedGoal_location_MSGTYPE Vector2
#define GameEvent_ChippedGoal_kick_location_MSGTYPE Vector2

#define GameEvent_BotTooFastInStop_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, FLOAT,    speed,             4)
#define GameEvent_BotTooFastInStop_CALLBACK NULL
#define GameEvent_BotTooFastInStop_DEFAULT NULL
#define GameEvent_BotTooFastInStop_location_MSGTYPE Vector2

#define GameEvent_DefenderTooCloseToKickPoint_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, FLOAT,    distance,          4)
#define GameEvent_DefenderTooCloseToKickPoint_CALLBACK NULL
#define GameEvent_DefenderTooCloseToKickPoint_DEFAULT NULL
#define GameEvent_DefenderTooCloseToKickPoint_location_MSGTYPE Vector2

#define GameEvent_BotCrashDrawn_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   bot_yellow,        1) \
X(a, STATIC,   OPTIONAL, UINT32,   bot_blue,          2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, FLOAT,    crash_speed,       4) \
X(a, STATIC,   OPTIONAL, FLOAT,    speed_diff,        5) \
X(a, STATIC,   OPTIONAL, FLOAT,    crash_angle,       6)
#define GameEvent_BotCrashDrawn_CALLBACK NULL
#define GameEvent_BotCrashDrawn_DEFAULT NULL
#define GameEvent_BotCrashDrawn_location_MSGTYPE Vector2

#define GameEvent_BotCrashUnique_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   violator,          2) \
X(a, STATIC,   OPTIONAL, UINT32,   victim,            3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          4) \
X(a, STATIC,   OPTIONAL, FLOAT,    crash_speed,       5) \
X(a, STATIC,   OPTIONAL, FLOAT,    speed_diff,        6) \
X(a, STATIC,   OPTIONAL, FLOAT,    crash_angle,       7)
#define GameEvent_BotCrashUnique_CALLBACK NULL
#define GameEvent_BotCrashUnique_DEFAULT NULL
#define GameEvent_BotCrashUnique_location_MSGTYPE Vector2

#define GameEvent_BotPushedBot_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   violator,          2) \
X(a, STATIC,   OPTIONAL, UINT32,   victim,            3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          4) \
X(a, STATIC,   OPTIONAL, FLOAT,    pushed_distance,   5)
#define GameEvent_BotPushedBot_CALLBACK NULL
#define GameEvent_BotPushedBot_DEFAULT NULL
#define GameEvent_BotPushedBot_location_MSGTYPE Vector2

#define GameEvent_BotTippedOver_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ball_location,     4)
#define GameEvent_BotTippedOver_CALLBACK NULL
#define GameEvent_BotTippedOver_DEFAULT NULL
#define GameEvent_BotTippedOver_location_MSGTYPE Vector2
#define GameEvent_BotTippedOver_ball_location_MSGTYPE Vector2

#define GameEvent_DefenderInDefenseArea_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, FLOAT,    distance,          4)
#define GameEvent_DefenderInDefenseArea_CALLBACK NULL
#define GameEvent_DefenderInDefenseArea_DEFAULT NULL
#define GameEvent_DefenderInDefenseArea_location_MSGTYPE Vector2

#define GameEvent_DefenderInDefenseAreaPartially_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, FLOAT,    distance,          4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ball_location,     5)
#define GameEvent_DefenderInDefenseAreaPartially_CALLBACK NULL
#define GameEvent_DefenderInDefenseAreaPartially_DEFAULT NULL
#define GameEvent_DefenderInDefenseAreaPartially_location_MSGTYPE Vector2
#define GameEvent_DefenderInDefenseAreaPartially_ball_location_MSGTYPE Vector2

#define GameEvent_AttackerTouchedBallInDefenseArea_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, FLOAT,    distance,          4)
#define GameEvent_AttackerTouchedBallInDefenseArea_CALLBACK NULL
#define GameEvent_AttackerTouchedBallInDefenseArea_DEFAULT NULL
#define GameEvent_AttackerTouchedBallInDefenseArea_location_MSGTYPE Vector2

#define GameEvent_BotKickedBallTooFast_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, FLOAT,    initial_ball_speed,   4) \
X(a, STATIC,   OPTIONAL, BOOL,     chipped,           5)
#define GameEvent_BotKickedBallTooFast_CALLBACK NULL
#define GameEvent_BotKickedBallTooFast_DEFAULT NULL
#define GameEvent_BotKickedBallTooFast_location_MSGTYPE Vector2

#define GameEvent_BotDribbledBallTooFar_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  start,             3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  end,               4)
#define GameEvent_BotDribbledBallTooFar_CALLBACK NULL
#define GameEvent_BotDribbledBallTooFar_DEFAULT NULL
#define GameEvent_BotDribbledBallTooFar_start_MSGTYPE Vector2
#define GameEvent_BotDribbledBallTooFar_end_MSGTYPE Vector2

#define GameEvent_AttackerTouchedOpponentInDefenseArea_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, UINT32,   victim,            4)
#define GameEvent_AttackerTouchedOpponentInDefenseArea_CALLBACK NULL
#define GameEvent_AttackerTouchedOpponentInDefenseArea_DEFAULT NULL
#define GameEvent_AttackerTouchedOpponentInDefenseArea_location_MSGTYPE Vector2

#define GameEvent_AttackerDoubleTouchedBall_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3)
#define GameEvent_AttackerDoubleTouchedBall_CALLBACK NULL
#define GameEvent_AttackerDoubleTouchedBall_DEFAULT NULL
#define GameEvent_AttackerDoubleTouchedBall_location_MSGTYPE Vector2

#define GameEvent_AttackerTooCloseToDefenseArea_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, FLOAT,    distance,          4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ball_location,     5)
#define GameEvent_AttackerTooCloseToDefenseArea_CALLBACK NULL
#define GameEvent_AttackerTooCloseToDefenseArea_DEFAULT NULL
#define GameEvent_AttackerTooCloseToDefenseArea_location_MSGTYPE Vector2
#define GameEvent_AttackerTooCloseToDefenseArea_ball_location_MSGTYPE Vector2

#define GameEvent_BotHeldBallDeliberately_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3) \
X(a, STATIC,   OPTIONAL, FLOAT,    duration,          4)
#define GameEvent_BotHeldBallDeliberately_CALLBACK NULL
#define GameEvent_BotHeldBallDeliberately_DEFAULT NULL
#define GameEvent_BotHeldBallDeliberately_location_MSGTYPE Vector2

#define GameEvent_BotInterferedPlacement_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   by_bot,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          3)
#define GameEvent_BotInterferedPlacement_CALLBACK NULL
#define GameEvent_BotInterferedPlacement_DEFAULT NULL
#define GameEvent_BotInterferedPlacement_location_MSGTYPE Vector2

#define GameEvent_MultipleCards_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1)
#define GameEvent_MultipleCards_CALLBACK NULL
#define GameEvent_MultipleCards_DEFAULT NULL

#define GameEvent_MultipleFouls_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, CALLBACK, REPEATED, MESSAGE,  caused_game_events,   2)
#define GameEvent_MultipleFouls_CALLBACK pb_default_field_callback
#define GameEvent_MultipleFouls_DEFAULT NULL
#define GameEvent_MultipleFouls_caused_game_events_MSGTYPE GameEvent

#define GameEvent_MultiplePlacementFailures_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1)
#define GameEvent_MultiplePlacementFailures_CALLBACK NULL
#define GameEvent_MultiplePlacementFailures_DEFAULT NULL

#define GameEvent_KickTimeout_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          2) \
X(a, STATIC,   OPTIONAL, FLOAT,    time,              3)
#define GameEvent_KickTimeout_CALLBACK NULL
#define GameEvent_KickTimeout_DEFAULT NULL
#define GameEvent_KickTimeout_location_MSGTYPE Vector2

#define GameEvent_NoProgressInGame_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          1) \
X(a, STATIC,   OPTIONAL, FLOAT,    time,              2)
#define GameEvent_NoProgressInGame_CALLBACK NULL
#define GameEvent_NoProgressInGame_DEFAULT NULL
#define GameEvent_NoProgressInGame_location_MSGTYPE Vector2

#define GameEvent_PlacementFailed_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, FLOAT,    remaining_distance,   2)
#define GameEvent_PlacementFailed_CALLBACK NULL
#define GameEvent_PlacementFailed_DEFAULT NULL

#define GameEvent_UnsportingBehaviorMinor_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, CALLBACK, REQUIRED, STRING,   reason,            2)
#define GameEvent_UnsportingBehaviorMinor_CALLBACK pb_default_field_callback
#define GameEvent_UnsportingBehaviorMinor_DEFAULT NULL

#define GameEvent_UnsportingBehaviorMajor_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, CALLBACK, REQUIRED, STRING,   reason,            2)
#define GameEvent_UnsportingBehaviorMajor_CALLBACK pb_default_field_callback
#define GameEvent_UnsportingBehaviorMajor_DEFAULT NULL

#define GameEvent_KeeperHeldBall_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          2) \
X(a, STATIC,   OPTIONAL, FLOAT,    duration,          3)
#define GameEvent_KeeperHeldBall_CALLBACK NULL
#define GameEvent_KeeperHeldBall_DEFAULT NULL
#define GameEvent_KeeperHeldBall_location_MSGTYPE Vector2

#define GameEvent_PlacementSucceeded_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, FLOAT,    time_taken,        2) \
X(a, STATIC,   OPTIONAL, FLOAT,    precision,         3) \
X(a, STATIC,   OPTIONAL, FLOAT,    distance,          4)
#define GameEvent_PlacementSucceeded_CALLBACK NULL
#define GameEvent_PlacementSucceeded_DEFAULT NULL

#define GameEvent_Prepared_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FLOAT,    time_taken,        1)
#define GameEvent_Prepared_CALLBACK NULL
#define GameEvent_Prepared_DEFAULT NULL

#define GameEvent_BotSubstitution_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1)
#define GameEvent_BotSubstitution_CALLBACK NULL
#define GameEvent_BotSubstitution_DEFAULT NULL

#define GameEvent_ChallengeFlag_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1)
#define GameEvent_ChallengeFlag_CALLBACK NULL
#define GameEvent_ChallengeFlag_DEFAULT NULL

#define GameEvent_EmergencyStop_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1)
#define GameEvent_EmergencyStop_CALLBACK NULL
#define GameEvent_EmergencyStop_DEFAULT NULL

#define GameEvent_TooManyRobots_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, INT32,    num_robots_allowed,   2) \
X(a, STATIC,   OPTIONAL, INT32,    num_robots_on_field,   3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ball_location,     4)
#define GameEvent_TooManyRobots_CALLBACK NULL
#define GameEvent_TooManyRobots_DEFAULT NULL
#define GameEvent_TooManyRobots_ball_location_MSGTYPE Vector2

#define GameEvent_BoundaryCrossing_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          2)
#define GameEvent_BoundaryCrossing_CALLBACK NULL
#define GameEvent_BoundaryCrossing_DEFAULT NULL
#define GameEvent_BoundaryCrossing_location_MSGTYPE Vector2

#define GameEvent_PenaltyKickFailed_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    by_team,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  location,          2)
#define GameEvent_PenaltyKickFailed_CALLBACK NULL
#define GameEvent_PenaltyKickFailed_DEFAULT NULL
#define GameEvent_PenaltyKickFailed_location_MSGTYPE Vector2

extern const pb_msgdesc_t GameEvent_msg;
extern const pb_msgdesc_t GameEvent_BallLeftField_msg;
extern const pb_msgdesc_t GameEvent_AimlessKick_msg;
extern const pb_msgdesc_t GameEvent_Goal_msg;
extern const pb_msgdesc_t GameEvent_IndirectGoal_msg;
extern const pb_msgdesc_t GameEvent_ChippedGoal_msg;
extern const pb_msgdesc_t GameEvent_BotTooFastInStop_msg;
extern const pb_msgdesc_t GameEvent_DefenderTooCloseToKickPoint_msg;
extern const pb_msgdesc_t GameEvent_BotCrashDrawn_msg;
extern const pb_msgdesc_t GameEvent_BotCrashUnique_msg;
extern const pb_msgdesc_t GameEvent_BotPushedBot_msg;
extern const pb_msgdesc_t GameEvent_BotTippedOver_msg;
extern const pb_msgdesc_t GameEvent_DefenderInDefenseArea_msg;
extern const pb_msgdesc_t GameEvent_DefenderInDefenseAreaPartially_msg;
extern const pb_msgdesc_t GameEvent_AttackerTouchedBallInDefenseArea_msg;
extern const pb_msgdesc_t GameEvent_BotKickedBallTooFast_msg;
extern const pb_msgdesc_t GameEvent_BotDribbledBallTooFar_msg;
extern const pb_msgdesc_t GameEvent_AttackerTouchedOpponentInDefenseArea_msg;
extern const pb_msgdesc_t GameEvent_AttackerDoubleTouchedBall_msg;
extern const pb_msgdesc_t GameEvent_AttackerTooCloseToDefenseArea_msg;
extern const pb_msgdesc_t GameEvent_BotHeldBallDeliberately_msg;
extern const pb_msgdesc_t GameEvent_BotInterferedPlacement_msg;
extern const pb_msgdesc_t GameEvent_MultipleCards_msg;
extern const pb_msgdesc_t GameEvent_MultipleFouls_msg;
extern const pb_msgdesc_t GameEvent_MultiplePlacementFailures_msg;
extern const pb_msgdesc_t GameEvent_KickTimeout_msg;
extern const pb_msgdesc_t GameEvent_NoProgressInGame_msg;
extern const pb_msgdesc_t GameEvent_PlacementFailed_msg;
extern const pb_msgdesc_t GameEvent_UnsportingBehaviorMinor_msg;
extern const pb_msgdesc_t GameEvent_UnsportingBehaviorMajor_msg;
extern const pb_msgdesc_t GameEvent_KeeperHeldBall_msg;
extern const pb_msgdesc_t GameEvent_PlacementSucceeded_msg;
extern const pb_msgdesc_t GameEvent_Prepared_msg;
extern const pb_msgdesc_t GameEvent_BotSubstitution_msg;
extern const pb_msgdesc_t GameEvent_ChallengeFlag_msg;
extern const pb_msgdesc_t GameEvent_EmergencyStop_msg;
extern const pb_msgdesc_t GameEvent_TooManyRobots_msg;
extern const pb_msgdesc_t GameEvent_BoundaryCrossing_msg;
extern const pb_msgdesc_t GameEvent_PenaltyKickFailed_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define GameEvent_fields &GameEvent_msg
#define GameEvent_BallLeftField_fields &GameEvent_BallLeftField_msg
#define GameEvent_AimlessKick_fields &GameEvent_AimlessKick_msg
#define GameEvent_Goal_fields &GameEvent_Goal_msg
#define GameEvent_IndirectGoal_fields &GameEvent_IndirectGoal_msg
#define GameEvent_ChippedGoal_fields &GameEvent_ChippedGoal_msg
#define GameEvent_BotTooFastInStop_fields &GameEvent_BotTooFastInStop_msg
#define GameEvent_DefenderTooCloseToKickPoint_fields &GameEvent_DefenderTooCloseToKickPoint_msg
#define GameEvent_BotCrashDrawn_fields &GameEvent_BotCrashDrawn_msg
#define GameEvent_BotCrashUnique_fields &GameEvent_BotCrashUnique_msg
#define GameEvent_BotPushedBot_fields &GameEvent_BotPushedBot_msg
#define GameEvent_BotTippedOver_fields &GameEvent_BotTippedOver_msg
#define GameEvent_DefenderInDefenseArea_fields &GameEvent_DefenderInDefenseArea_msg
#define GameEvent_DefenderInDefenseAreaPartially_fields &GameEvent_DefenderInDefenseAreaPartially_msg
#define GameEvent_AttackerTouchedBallInDefenseArea_fields &GameEvent_AttackerTouchedBallInDefenseArea_msg
#define GameEvent_BotKickedBallTooFast_fields &GameEvent_BotKickedBallTooFast_msg
#define GameEvent_BotDribbledBallTooFar_fields &GameEvent_BotDribbledBallTooFar_msg
#define GameEvent_AttackerTouchedOpponentInDefenseArea_fields &GameEvent_AttackerTouchedOpponentInDefenseArea_msg
#define GameEvent_AttackerDoubleTouchedBall_fields &GameEvent_AttackerDoubleTouchedBall_msg
#define GameEvent_AttackerTooCloseToDefenseArea_fields &GameEvent_AttackerTooCloseToDefenseArea_msg
#define GameEvent_BotHeldBallDeliberately_fields &GameEvent_BotHeldBallDeliberately_msg
#define GameEvent_BotInterferedPlacement_fields &GameEvent_BotInterferedPlacement_msg
#define GameEvent_MultipleCards_fields &GameEvent_MultipleCards_msg
#define GameEvent_MultipleFouls_fields &GameEvent_MultipleFouls_msg
#define GameEvent_MultiplePlacementFailures_fields &GameEvent_MultiplePlacementFailures_msg
#define GameEvent_KickTimeout_fields &GameEvent_KickTimeout_msg
#define GameEvent_NoProgressInGame_fields &GameEvent_NoProgressInGame_msg
#define GameEvent_PlacementFailed_fields &GameEvent_PlacementFailed_msg
#define GameEvent_UnsportingBehaviorMinor_fields &GameEvent_UnsportingBehaviorMinor_msg
#define GameEvent_UnsportingBehaviorMajor_fields &GameEvent_UnsportingBehaviorMajor_msg
#define GameEvent_KeeperHeldBall_fields &GameEvent_KeeperHeldBall_msg
#define GameEvent_PlacementSucceeded_fields &GameEvent_PlacementSucceeded_msg
#define GameEvent_Prepared_fields &GameEvent_Prepared_msg
#define GameEvent_BotSubstitution_fields &GameEvent_BotSubstitution_msg
#define GameEvent_ChallengeFlag_fields &GameEvent_ChallengeFlag_msg
#define GameEvent_EmergencyStop_fields &GameEvent_EmergencyStop_msg
#define GameEvent_TooManyRobots_fields &GameEvent_TooManyRobots_msg
#define GameEvent_BoundaryCrossing_fields &GameEvent_BoundaryCrossing_msg
#define GameEvent_PenaltyKickFailed_fields &GameEvent_PenaltyKickFailed_msg

/* Maximum encoded size of messages (where known) */
/* GameEvent_size depends on runtime parameters */
/* GameEvent_Goal_size depends on runtime parameters */
/* GameEvent_MultipleFouls_size depends on runtime parameters */
/* GameEvent_UnsportingBehaviorMinor_size depends on runtime parameters */
/* GameEvent_UnsportingBehaviorMajor_size depends on runtime parameters */
#define GameEvent_AimlessKick_size               32
#define GameEvent_AttackerDoubleTouchedBall_size 20
#define GameEvent_AttackerTooCloseToDefenseArea_size 37
#define GameEvent_AttackerTouchedBallInDefenseArea_size 25
#define GameEvent_AttackerTouchedOpponentInDefenseArea_size 26
#define GameEvent_BallLeftField_size             20
#define GameEvent_BotCrashDrawn_size             39
#define GameEvent_BotCrashUnique_size            41
#define GameEvent_BotDribbledBallTooFar_size     32
#define GameEvent_BotHeldBallDeliberately_size   25
#define GameEvent_BotInterferedPlacement_size    20
#define GameEvent_BotKickedBallTooFast_size      27
#define GameEvent_BotPushedBot_size              31
#define GameEvent_BotSubstitution_size           2
#define GameEvent_BotTippedOver_size             32
#define GameEvent_BotTooFastInStop_size          25
#define GameEvent_BoundaryCrossing_size          14
#define GameEvent_ChallengeFlag_size             2
#define GameEvent_ChippedGoal_size               37
#define GameEvent_DefenderInDefenseAreaPartially_size 37
#define GameEvent_DefenderInDefenseArea_size     25
#define GameEvent_DefenderTooCloseToKickPoint_size 25
#define GameEvent_EmergencyStop_size             2
#define GameEvent_IndirectGoal_size              32
#define GameEvent_KeeperHeldBall_size            19
#define GameEvent_KickTimeout_size               19
#define GameEvent_MultipleCards_size             2
#define GameEvent_MultiplePlacementFailures_size 2
#define GameEvent_NoProgressInGame_size          17
#define GameEvent_PenaltyKickFailed_size         14
#define GameEvent_PlacementFailed_size           7
#define GameEvent_PlacementSucceeded_size        17
#define GameEvent_Prepared_size                  5
#define GameEvent_TooManyRobots_size             36

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
