/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_SSL_GC_GEOMETRY_PB_H_INCLUDED
#define PB_SSL_GC_GEOMETRY_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* A vector with two dimensions */
typedef struct _Vector2 {
    float x;
    float y;
} Vector2;

/* A vector with three dimensions */
typedef struct _Vector3 {
    float x;
    float y;
    float z;
} Vector3;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Vector2_init_default                     {0, 0}
#define Vector3_init_default                     {0, 0, 0}
#define Vector2_init_zero                        {0, 0}
#define Vector3_init_zero                        {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Vector2_x_tag                            1
#define Vector2_y_tag                            2
#define Vector3_x_tag                            1
#define Vector3_y_tag                            2
#define Vector3_z_tag                            3

/* Struct field encoding specification for nanopb */
#define Vector2_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    x,                 1) \
X(a, STATIC,   REQUIRED, FLOAT,    y,                 2)
#define Vector2_CALLBACK NULL
#define Vector2_DEFAULT NULL

#define Vector3_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    x,                 1) \
X(a, STATIC,   REQUIRED, FLOAT,    y,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    z,                 3)
#define Vector3_CALLBACK NULL
#define Vector3_DEFAULT NULL

extern const pb_msgdesc_t Vector2_msg;
extern const pb_msgdesc_t Vector3_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Vector2_fields &Vector2_msg
#define Vector3_fields &Vector3_msg

/* Maximum encoded size of messages (where known) */
#define Vector2_size                             10
#define Vector3_size                             15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
